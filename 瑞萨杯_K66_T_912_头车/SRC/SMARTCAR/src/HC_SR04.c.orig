#include "HC_SR04.h"

uint16_t Distance;                    //检测距离
uint32_t timevar = 0;

/***超声波引脚连接： ECHO--PE9,TRIG--PE8  ***/

/********ECHO和TRIG引脚I/O初始化******/
void HC_SR04_Init(void)                      
{  
   gpio_init(TRIG_Port,GPO,0);
   gpio_init(ECHO_Port,GPI,0);
}

void distance(void)
{
  uint32_t Time = 0;
  TRIG = 0;
  pit_delay_us(pit0,10);
  TRIG = 1;               //产生触发脉冲
  pit_delay_us(pit0,20);       
  TRIG = 0;           //产生一个20us的高电平脉冲

  while(ECHO == 0);             //等待电平变高，低电平一直等待
  pit_time_start  (pit0); //开始计时
  while(ECHO == 1)              //等待电平变低，高电平一直等待
  {
    Time++;
    systick_delay(1);  
    if(Time>240000) break; //24MS还没有检测到     
  };               
  timevar = pit_time_get(pit0);    //停止计时，获取计时时间
     //timevar = timevar * 340 /2/10;
  Distance = timevar*(331.4+0.607*10)/2000;  //加上温度补偿
  //DelayMs(60); //延时60MS，测距更精确，可以不用,2.27号：有反映说加上之后测距不精确，注释之后就好了，自行测试
} 

void distanceControl(void)
{
    int wanted_speed;
    int distance_error = Distance - DISTANCE;
    if(distance_error < 0) {//减速
      wanted_speed = -180;
    } else {
      wanted_speed = SPEED;
    }
    PID_init(pid_speed_L, wanted_speed, speed_p/10.0, speed_i/10.0, speed_d/10.0);//电机PID
}
  




